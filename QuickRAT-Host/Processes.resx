<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sP9/S+QAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="guna2AnimateWindow1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="pname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pid.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="responding.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="priority.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cpu.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="memory.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="path.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>